package com.hexiaofei.sjzclient.dao.mapper;

import com.hexiaofei.sjzclient.domain.NotificationConfig;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

import java.util.List;

public interface NotificationConfigMapper {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table notification_config
     *
     * @mbggenerated Tue Nov 20 19:49:12 CST 2012
     */
    @Delete({
        "delete from notification_config",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table notification_config
     *
     * @mbggenerated Tue Nov 20 19:49:12 CST 2012
     */
    @Insert({
        "insert into notification_config (id, userId, ",
        "investorInvest, investorRepay, ",
        "investorLoanDead, investorLoanReleased, ",
        "investorNewProduct, investorCommentReplied, ",
        "borrowerLoanReleased, borrowerLoanRejected, ",
        "borrowerLoanDead, borrowerPlatformNotice, ",
        "borrowerRepayReminder, borrowerOverDueNotice,",
        "withdrawSuccess, withdrawFailed,",
        "rechargeSuccess, loginFailed,",
        "borrowerLoanAgree)",
        "values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, ",
        "#{investorInvest,jdbcType=SMALLINT}, #{investorRepay,jdbcType=SMALLINT}, ",
        "#{investorLoanDead,jdbcType=SMALLINT}, #{investorLoanReleased,jdbcType=SMALLINT}, ",
        "#{investorNewProduct,jdbcType=SMALLINT}, #{investorCommentReplied,jdbcType=SMALLINT}, ",
        "#{borrowerLoanReleased,jdbcType=SMALLINT}, #{borrowerLoanRejected,jdbcType=SMALLINT}, ",
        "#{borrowerLoanDead,jdbcType=SMALLINT}, #{borrowerPlatformNotice,jdbcType=SMALLINT}, ",
        "#{borrowerRepayReminder,jdbcType=SMALLINT}, #{borrowerOverDueNotice,jdbcType=SMALLINT},",
        "#{withdrawSuccess,jdbcType=SMALLINT}, #{withdrawFailed,jdbcType=SMALLINT},",
        "#{rechargeSuccess,jdbcType=SMALLINT}, #{loginFailed,jdbcType=SMALLINT},",
        "#{borrowerLoanAgree,jdbcType=SMALLINT})"
    })
    int insert(NotificationConfig record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table notification_config
     *
     * @mbggenerated Tue Nov 20 19:49:12 CST 2012
     */
    @InsertProvider(type=NotificationConfigSqlProvider.class, method="insertSelective")
    int insertSelective(NotificationConfig record);


    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table notification_config
     *
     * @mbggenerated Tue Nov 20 19:49:12 CST 2012
     */
    @Select({
        "select",
        "id, userId, investorInvest, investorRepay, investorLoanDead, investorLoanReleased, ",
        "investorNewProduct, investorCommentReplied, borrowerLoanReleased, borrowerLoanRejected, ",
        "borrowerLoanDead, borrowerPlatformNotice, borrowerRepayReminder, borrowerOverDueNotice,",
        "withdrawApply, withdrawSuccess, withdrawFailed, rechargeSuccess, loginFailed,",
        "modifyLoginPassword, modifyPayPassword, borrowerLoanAgree",
        "from notification_config",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="userId", property="userId", jdbcType=JdbcType.INTEGER),
        @Result(column="investorInvest", property="investorInvest", jdbcType=JdbcType.SMALLINT),
        @Result(column="investorRepay", property="investorRepay", jdbcType=JdbcType.SMALLINT),
        @Result(column="investorLoanDead", property="investorLoanDead", jdbcType=JdbcType.SMALLINT),
        @Result(column="investorLoanReleased", property="investorLoanReleased", jdbcType=JdbcType.SMALLINT),
        @Result(column="investorNewProduct", property="investorNewProduct", jdbcType=JdbcType.SMALLINT),
        @Result(column="investorCommentReplied", property="investorCommentReplied", jdbcType=JdbcType.SMALLINT),
        @Result(column="borrowerLoanReleased", property="borrowerLoanReleased", jdbcType=JdbcType.SMALLINT),
        @Result(column="borrowerLoanRejected", property="borrowerLoanRejected", jdbcType=JdbcType.SMALLINT),
        @Result(column="borrowerLoanDead", property="borrowerLoanDead", jdbcType=JdbcType.SMALLINT),
        @Result(column="borrowerPlatformNotice", property="borrowerPlatformNotice", jdbcType=JdbcType.SMALLINT),
        @Result(column="borrowerRepayReminder", property="borrowerRepayReminder", jdbcType=JdbcType.SMALLINT),
        @Result(column="borrowerOverDueNotice", property="borrowerOverDueNotice", jdbcType=JdbcType.SMALLINT),
        @Result(column="withdrawApply", property="withdrawApply", jdbcType=JdbcType.SMALLINT),
        @Result(column="withdrawSuccess", property="withdrawSuccess", jdbcType=JdbcType.SMALLINT),
        @Result(column="withdrawFailed", property="withdrawFailed", jdbcType=JdbcType.SMALLINT),
        @Result(column="rechargeSuccess", property="rechargeSuccess", jdbcType=JdbcType.SMALLINT),
        @Result(column="loginFailed", property="loginFailed", jdbcType=JdbcType.SMALLINT),
        @Result(column="modifyLoginPassword", property="modifyLoginPassword", jdbcType=JdbcType.SMALLINT),
        @Result(column="modifyPayPassword", property="modifyPayPassword", jdbcType=JdbcType.SMALLINT),
        @Result(column="borrowerLoanAgree", property="borrowerLoanAgree", jdbcType=JdbcType.SMALLINT)
    })
    NotificationConfig selectByPrimaryKey(Integer id);



    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table notification_config
     *
     * @mbggenerated Tue Nov 20 19:49:12 CST 2012
     */
    @UpdateProvider(type=NotificationConfigSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(NotificationConfig record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table notification_config
     *
     * @mbggenerated Tue Nov 20 19:49:12 CST 2012
     */
    @Update({
        "update notification_config",
        "set userId = #{userId,jdbcType=INTEGER},",
          "investorInvest = #{investorInvest,jdbcType=SMALLINT},",
          "investorRepay = #{investorRepay,jdbcType=SMALLINT},",
          "investorLoanDead = #{investorLoanDead,jdbcType=SMALLINT},",
          "investorLoanReleased = #{investorLoanReleased,jdbcType=SMALLINT},",
          "investorNewProduct = #{investorNewProduct,jdbcType=SMALLINT},",
          "investorCommentReplied = #{investorCommentReplied,jdbcType=SMALLINT},",
          "borrowerLoanReleased = #{borrowerLoanReleased,jdbcType=SMALLINT},",
          "borrowerLoanRejected = #{borrowerLoanRejected,jdbcType=SMALLINT},",
          "borrowerLoanDead = #{borrowerLoanDead,jdbcType=SMALLINT},",
          "borrowerPlatformNotice = #{borrowerPlatformNotice,jdbcType=SMALLINT},",
          "borrowerRepayReminder = #{borrowerRepayReminder,jdbcType=SMALLINT},",
          "borrowerOverDueNotice = #{borrowerOverDueNotice,jdbcType=SMALLINT},",
          "withdrawSuccess = #{withdrawSuccess,jdbcType=SMALLINT},",
          "withdrawFailed = #{withdrawFailed,jdbcType=SMALLINT},",
          "rechargeSuccess = #{rechargeSuccess,jdbcType=SMALLINT},",
          "loginFailed = #{loginFailed,jdbcType=SMALLINT},",
          "borrowerLoanAgree = #{borrowerLoanAgree,jdbcType=SMALLINT}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(NotificationConfig record);
    
    @Delete("DELETE FROM notification_config WHERE userId = #{userId}")
    int deleteByUserId(@Param("userId") int userId);
    
    @Select("SELECT * FROM notification_config WHERE userId = #{userId}")
    NotificationConfig selectByUserId(@Param("userId") int userId);
    
    @Update({
        "update notification_config",
        "set userId = #{userId,jdbcType=INTEGER},",
          "investorInvest = #{investorInvest,jdbcType=SMALLINT},",
          "investorRepay = #{investorRepay,jdbcType=SMALLINT},",
          "investorLoanDead = #{investorLoanDead,jdbcType=SMALLINT},",
          "investorLoanReleased = #{investorLoanReleased,jdbcType=SMALLINT},",
          "investorNewProduct = #{investorNewProduct,jdbcType=SMALLINT},",
          "investorCommentReplied = #{investorCommentReplied,jdbcType=SMALLINT},",
          "borrowerLoanReleased = #{borrowerLoanReleased,jdbcType=SMALLINT},",
          "borrowerLoanRejected = #{borrowerLoanRejected,jdbcType=SMALLINT},",
          "borrowerLoanDead = #{borrowerLoanDead,jdbcType=SMALLINT},",
          "borrowerPlatformNotice = #{borrowerPlatformNotice,jdbcType=SMALLINT},",
          "borrowerRepayReminder = #{borrowerRepayReminder,jdbcType=SMALLINT},",
          "borrowerOverDueNotice = #{borrowerOverDueNotice,jdbcType=SMALLINT},",
          "withdrawSuccess = #{withdrawSuccess,jdbcType=SMALLINT},",
          "withdrawFailed = #{withdrawFailed,jdbcType=SMALLINT},",
          "rechargeSuccess = #{rechargeSuccess,jdbcType=SMALLINT},",
          "loginFailed = #{loginFailed,jdbcType=SMALLINT},",
          "borrowerLoanAgree = #{borrowerLoanAgree, jdbcType=SMALLINT}",
        "where userId = #{userId,jdbcType=INTEGER}"
    })
    int updateByUserId(NotificationConfig notificationConfig);
    
    @Select("SELECT * FROM notification_config WHERE userId IN(SELECT investorUserId FROM loan_investor WHERE loanId = #{loanId})")
    List<NotificationConfig> getInvestorNotificationConfigByLoanId(@Param("loanId") int loanId);
    
    @Select("SELECT * FROM notification_config WHERE userId IN(SELECT investorUserId FROM loan_investor WHERE id = #{id})")
    NotificationConfig getNoticeDetailById(@Param("id") int id);
    
    @Select("SELECT messageSetup FROM notification_config WHERE userId = #{userId}")
	String getMessageSetup(@Param("userId") Integer userId);
    
    @Update({
        "update notification_config",
        "set messageSetup = #{messageSetup,jdbcType=VARCHAR}",
        "where userId = #{userId,jdbcType=INTEGER}"
    })
	int updateMessageSetup(@Param("messageSetup") String messageSetup, @Param("userId") Integer userId);
    
}
