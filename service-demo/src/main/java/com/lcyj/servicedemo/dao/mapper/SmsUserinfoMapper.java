package com.lcyj.servicedemo.dao.mapper;

import com.lcyj.servicedemo.model.SmsUserinfo;
import com.lcyj.servicedemo.model.SmsUserinfoExample;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;
import org.springframework.stereotype.Repository;
import org.springframework.web.bind.annotation.ResponseBody;

import java.util.List;

@Repository
public interface SmsUserinfoMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_userinfo
     *
     * @mbggenerated Sat Feb 22 22:44:10 CST 2020
     */
    @SelectProvider(type=SmsUserinfoSqlProvider.class, method="countByExample")
    int countByExample(SmsUserinfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_userinfo
     *
     * @mbggenerated Sat Feb 22 22:44:10 CST 2020
     */
    @DeleteProvider(type=SmsUserinfoSqlProvider.class, method="deleteByExample")
    int deleteByExample(SmsUserinfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_userinfo
     *
     * @mbggenerated Sat Feb 22 22:44:10 CST 2020
     */
    @Delete({
        "delete from sms_userinfo",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_userinfo
     *
     * @mbggenerated Sat Feb 22 22:44:10 CST 2020
     */
    @Insert({
        "insert into sms_userinfo (id, userId, ",
        "userName, idCard, ",
        "sex, userLevel, ",
        "email, mobileNo, ",
        "emailStatus, mobileNoStatus, ",
        "createTime)",
        "values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, ",
        "#{userName,jdbcType=VARCHAR}, #{idCard,jdbcType=VARCHAR}, ",
        "#{sex,jdbcType=SMALLINT}, #{userLevel,jdbcType=SMALLINT}, ",
        "#{email,jdbcType=VARCHAR}, #{mobileNo,jdbcType=VARCHAR}, ",
        "#{emailStatus,jdbcType=SMALLINT}, #{mobileNoStatus,jdbcType=SMALLINT}, ",
        "#{createTime,jdbcType=TIMESTAMP})"
    })
    int insert(SmsUserinfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_userinfo
     *
     * @mbggenerated Sat Feb 22 22:44:10 CST 2020
     */
    @InsertProvider(type=SmsUserinfoSqlProvider.class, method="insertSelective")
    int insertSelective(SmsUserinfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_userinfo
     *
     * @mbggenerated Sat Feb 22 22:44:10 CST 2020
     */
    @SelectProvider(type=SmsUserinfoSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="userId", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="userName", property="userName", jdbcType=JdbcType.VARCHAR),
        @Result(column="idCard", property="idCard", jdbcType=JdbcType.VARCHAR),
        @Result(column="sex", property="sex", jdbcType=JdbcType.SMALLINT),
        @Result(column="userLevel", property="userLevel", jdbcType=JdbcType.SMALLINT),
        @Result(column="email", property="email", jdbcType=JdbcType.VARCHAR),
        @Result(column="mobileNo", property="mobileNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="emailStatus", property="emailStatus", jdbcType=JdbcType.SMALLINT),
        @Result(column="mobileNoStatus", property="mobileNoStatus", jdbcType=JdbcType.SMALLINT),
        @Result(column="createTime", property="createTime", jdbcType=JdbcType.TIMESTAMP)
    })
    List<SmsUserinfo> selectByExample(SmsUserinfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_userinfo
     *
     * @mbggenerated Sat Feb 22 22:44:10 CST 2020
     */
    @Select({
        "select",
        "id, userId, userName, idCard, sex, userLevel, email, mobileNo, emailStatus, ",
        "mobileNoStatus, createTime",
        "from sms_userinfo",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="userId", property="userId", jdbcType=JdbcType.VARCHAR),
        @Result(column="userName", property="userName", jdbcType=JdbcType.VARCHAR),
        @Result(column="idCard", property="idCard", jdbcType=JdbcType.VARCHAR),
        @Result(column="sex", property="sex", jdbcType=JdbcType.SMALLINT),
        @Result(column="userLevel", property="userLevel", jdbcType=JdbcType.SMALLINT),
        @Result(column="email", property="email", jdbcType=JdbcType.VARCHAR),
        @Result(column="mobileNo", property="mobileNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="emailStatus", property="emailStatus", jdbcType=JdbcType.SMALLINT),
        @Result(column="mobileNoStatus", property="mobileNoStatus", jdbcType=JdbcType.SMALLINT),
        @Result(column="createTime", property="createTime", jdbcType=JdbcType.TIMESTAMP)
    })
    SmsUserinfo selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_userinfo
     *
     * @mbggenerated Sat Feb 22 22:44:10 CST 2020
     */
    @UpdateProvider(type=SmsUserinfoSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") SmsUserinfo record, @Param("example") SmsUserinfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_userinfo
     *
     * @mbggenerated Sat Feb 22 22:44:10 CST 2020
     */
    @UpdateProvider(type=SmsUserinfoSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") SmsUserinfo record, @Param("example") SmsUserinfoExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_userinfo
     *
     * @mbggenerated Sat Feb 22 22:44:10 CST 2020
     */
    @UpdateProvider(type=SmsUserinfoSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(SmsUserinfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sms_userinfo
     *
     * @mbggenerated Sat Feb 22 22:44:10 CST 2020
     */
    @Update({
        "update sms_userinfo",
        "set userId = #{userId,jdbcType=VARCHAR},",
          "userName = #{userName,jdbcType=VARCHAR},",
          "idCard = #{idCard,jdbcType=VARCHAR},",
          "sex = #{sex,jdbcType=SMALLINT},",
          "userLevel = #{userLevel,jdbcType=SMALLINT},",
          "email = #{email,jdbcType=VARCHAR},",
          "mobileNo = #{mobileNo,jdbcType=VARCHAR},",
          "emailStatus = #{emailStatus,jdbcType=SMALLINT},",
          "mobileNoStatus = #{mobileNoStatus,jdbcType=SMALLINT},",
          "createTime = #{createTime,jdbcType=TIMESTAMP}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(SmsUserinfo record);

    @Select(" select count(*) from sms_userinfo ")
    int selectCountByAll();

    @Select({
            " select ",
            " id, userId, userName, idCard, sex, userLevel, email, mobileNo, emailStatus, ",
            " mobileNoStatus, createTime",
            " from sms_userinfo su",
            " order by su.createTime desc ",
            " limit #{offset},#{pagesize} "
    })
    @Results({
            @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
            @Result(column="userId", property="userId", jdbcType=JdbcType.VARCHAR),
            @Result(column="userName", property="userName", jdbcType=JdbcType.VARCHAR),
            @Result(column="idCard", property="idCard", jdbcType=JdbcType.VARCHAR),
            @Result(column="sex", property="sex", jdbcType=JdbcType.SMALLINT),
            @Result(column="userLevel", property="userLevel", jdbcType=JdbcType.SMALLINT),
            @Result(column="email", property="email", jdbcType=JdbcType.VARCHAR),
            @Result(column="mobileNo", property="mobileNo", jdbcType=JdbcType.VARCHAR),
            @Result(column="emailStatus", property="emailStatus", jdbcType=JdbcType.SMALLINT),
            @Result(column="mobileNoStatus", property="mobileNoStatus", jdbcType=JdbcType.SMALLINT),
            @Result(column="createTime", property="createTime", jdbcType=JdbcType.TIMESTAMP)
    })
    List<SmsUserinfo> selectListByPaging(@Param("offset") int offset, @Param("pagesize")  int pageSize);
}