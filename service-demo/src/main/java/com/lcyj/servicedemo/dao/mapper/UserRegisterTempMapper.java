package com.lcyj.servicedemo.dao.mapper;

import com.lcyj.servicedemo.model.UserRegisterTemp;
import com.lcyj.servicedemo.model.UserRegisterTempExample;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;
import org.springframework.stereotype.Repository;

import java.util.List;

@Repository
public interface UserRegisterTempMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_register_temp
     *
     * @mbggenerated Sun Dec 22 13:06:40 CST 2019
     */
    @SelectProvider(type=UserRegisterTempSqlProvider.class, method="countByExample")
    int countByExample(UserRegisterTempExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_register_temp
     *
     * @mbggenerated Sun Dec 22 13:06:40 CST 2019
     */
    @DeleteProvider(type=UserRegisterTempSqlProvider.class, method="deleteByExample")
    int deleteByExample(UserRegisterTempExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_register_temp
     *
     * @mbggenerated Sun Dec 22 13:06:40 CST 2019
     */
    @Delete({
        "delete from user_register_temp",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_register_temp
     *
     * @mbggenerated Sun Dec 22 13:06:40 CST 2019
     */
    @Insert({
        "insert into user_register_temp (id, email, ",
        "nickName, passwd, ",
        "registerTime, roles, ",
        "question, answer, ",
        "weiboUId, weiboAccessToken, ",
        "qqUId, qqAccessToken, ",
        "origin, staffId, ",
        "inviterId, mobile)",
        "values (#{id,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, ",
        "#{nickName,jdbcType=VARCHAR}, #{passwd,jdbcType=VARCHAR}, ",
        "#{registerTime,jdbcType=TIMESTAMP}, #{roles,jdbcType=SMALLINT}, ",
        "#{question,jdbcType=VARCHAR}, #{answer,jdbcType=VARCHAR}, ",
        "#{weiboUId,jdbcType=VARCHAR}, #{weiboAccessToken,jdbcType=VARCHAR}, ",
        "#{qqUId,jdbcType=VARCHAR}, #{qqAccessToken,jdbcType=VARCHAR}, ",
        "#{origin,jdbcType=SMALLINT}, #{staffId,jdbcType=INTEGER}, ",
        "#{inviterId,jdbcType=INTEGER}, #{mobile,jdbcType=VARCHAR})"
    })
    int insert(UserRegisterTemp record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_register_temp
     *
     * @mbggenerated Sun Dec 22 13:06:40 CST 2019
     */
    @InsertProvider(type=UserRegisterTempSqlProvider.class, method="insertSelective")
    int insertSelective(UserRegisterTemp record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_register_temp
     *
     * @mbggenerated Sun Dec 22 13:06:40 CST 2019
     */
    @SelectProvider(type=UserRegisterTempSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="email", property="email", jdbcType=JdbcType.VARCHAR),
        @Result(column="nickName", property="nickName", jdbcType=JdbcType.VARCHAR),
        @Result(column="passwd", property="passwd", jdbcType=JdbcType.VARCHAR),
        @Result(column="registerTime", property="registerTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="roles", property="roles", jdbcType=JdbcType.SMALLINT),
        @Result(column="question", property="question", jdbcType=JdbcType.VARCHAR),
        @Result(column="answer", property="answer", jdbcType=JdbcType.VARCHAR),
        @Result(column="weiboUId", property="weiboUId", jdbcType=JdbcType.VARCHAR),
        @Result(column="weiboAccessToken", property="weiboAccessToken", jdbcType=JdbcType.VARCHAR),
        @Result(column="qqUId", property="qqUId", jdbcType=JdbcType.VARCHAR),
        @Result(column="qqAccessToken", property="qqAccessToken", jdbcType=JdbcType.VARCHAR),
        @Result(column="origin", property="origin", jdbcType=JdbcType.SMALLINT),
        @Result(column="staffId", property="staffId", jdbcType=JdbcType.INTEGER),
        @Result(column="inviterId", property="inviterId", jdbcType=JdbcType.INTEGER),
        @Result(column="mobile", property="mobile", jdbcType=JdbcType.VARCHAR)
    })
    List<UserRegisterTemp> selectByExample(UserRegisterTempExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_register_temp
     *
     * @mbggenerated Sun Dec 22 13:06:40 CST 2019
     */
    @Select({
        "select",
        "id, email, nickName, passwd, registerTime, roles, question, answer, weiboUId, ",
        "weiboAccessToken, qqUId, qqAccessToken, origin, staffId, inviterId, mobile",
        "from user_register_temp",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="email", property="email", jdbcType=JdbcType.VARCHAR),
        @Result(column="nickName", property="nickName", jdbcType=JdbcType.VARCHAR),
        @Result(column="passwd", property="passwd", jdbcType=JdbcType.VARCHAR),
        @Result(column="registerTime", property="registerTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="roles", property="roles", jdbcType=JdbcType.SMALLINT),
        @Result(column="question", property="question", jdbcType=JdbcType.VARCHAR),
        @Result(column="answer", property="answer", jdbcType=JdbcType.VARCHAR),
        @Result(column="weiboUId", property="weiboUId", jdbcType=JdbcType.VARCHAR),
        @Result(column="weiboAccessToken", property="weiboAccessToken", jdbcType=JdbcType.VARCHAR),
        @Result(column="qqUId", property="qqUId", jdbcType=JdbcType.VARCHAR),
        @Result(column="qqAccessToken", property="qqAccessToken", jdbcType=JdbcType.VARCHAR),
        @Result(column="origin", property="origin", jdbcType=JdbcType.SMALLINT),
        @Result(column="staffId", property="staffId", jdbcType=JdbcType.INTEGER),
        @Result(column="inviterId", property="inviterId", jdbcType=JdbcType.INTEGER),
        @Result(column="mobile", property="mobile", jdbcType=JdbcType.VARCHAR)
    })
    UserRegisterTemp selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_register_temp
     *
     * @mbggenerated Sun Dec 22 13:06:40 CST 2019
     */
    @UpdateProvider(type=UserRegisterTempSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") UserRegisterTemp record, @Param("example") UserRegisterTempExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_register_temp
     *
     * @mbggenerated Sun Dec 22 13:06:40 CST 2019
     */
    @UpdateProvider(type=UserRegisterTempSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") UserRegisterTemp record, @Param("example") UserRegisterTempExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_register_temp
     *
     * @mbggenerated Sun Dec 22 13:06:40 CST 2019
     */
    @UpdateProvider(type=UserRegisterTempSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(UserRegisterTemp record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_register_temp
     *
     * @mbggenerated Sun Dec 22 13:06:40 CST 2019
     */
    @Update({
        "update user_register_temp",
        "set email = #{email,jdbcType=VARCHAR},",
          "nickName = #{nickName,jdbcType=VARCHAR},",
          "passwd = #{passwd,jdbcType=VARCHAR},",
          "registerTime = #{registerTime,jdbcType=TIMESTAMP},",
          "roles = #{roles,jdbcType=SMALLINT},",
          "question = #{question,jdbcType=VARCHAR},",
          "answer = #{answer,jdbcType=VARCHAR},",
          "weiboUId = #{weiboUId,jdbcType=VARCHAR},",
          "weiboAccessToken = #{weiboAccessToken,jdbcType=VARCHAR},",
          "qqUId = #{qqUId,jdbcType=VARCHAR},",
          "qqAccessToken = #{qqAccessToken,jdbcType=VARCHAR},",
          "origin = #{origin,jdbcType=SMALLINT},",
          "staffId = #{staffId,jdbcType=INTEGER},",
          "inviterId = #{inviterId,jdbcType=INTEGER},",
          "mobile = #{mobile,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(UserRegisterTemp record);
}