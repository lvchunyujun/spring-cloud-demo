package com.lcyj.servicedemo.dao.mapper;

import com.lcyj.servicedemo.model.UserRegisterTemp;
import com.lcyj.servicedemo.model.UserRegisterTempExample;
import com.lcyj.servicedemo.model.UserRegisterTempExample.Criteria;
import com.lcyj.servicedemo.model.UserRegisterTempExample.Criterion;
import org.springframework.stereotype.Repository;

import java.util.List;
import java.util.Map;

import static org.apache.ibatis.jdbc.SqlBuilder.*;

@Repository
public class UserRegisterTempSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_register_temp
     *
     * @mbggenerated Sun Dec 22 13:06:40 CST 2019
     */
    public String countByExample(UserRegisterTempExample example) {
        BEGIN();
        SELECT("count(*)");
        FROM("user_register_temp");
        applyWhere(example, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_register_temp
     *
     * @mbggenerated Sun Dec 22 13:06:40 CST 2019
     */
    public String deleteByExample(UserRegisterTempExample example) {
        BEGIN();
        DELETE_FROM("user_register_temp");
        applyWhere(example, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_register_temp
     *
     * @mbggenerated Sun Dec 22 13:06:40 CST 2019
     */
    public String insertSelective(UserRegisterTemp record) {
        BEGIN();
        INSERT_INTO("user_register_temp");
        
        if (record.getId() != null) {
            VALUES("id", "#{id,jdbcType=INTEGER}");
        }
        
        if (record.getEmail() != null) {
            VALUES("email", "#{email,jdbcType=VARCHAR}");
        }
        
        if (record.getNickName() != null) {
            VALUES("nickName", "#{nickName,jdbcType=VARCHAR}");
        }
        
        if (record.getPasswd() != null) {
            VALUES("passwd", "#{passwd,jdbcType=VARCHAR}");
        }
        
        if (record.getRegisterTime() != null) {
            VALUES("registerTime", "#{registerTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getRoles() != null) {
            VALUES("roles", "#{roles,jdbcType=SMALLINT}");
        }
        
        if (record.getQuestion() != null) {
            VALUES("question", "#{question,jdbcType=VARCHAR}");
        }
        
        if (record.getAnswer() != null) {
            VALUES("answer", "#{answer,jdbcType=VARCHAR}");
        }
        
        if (record.getWeiboUId() != null) {
            VALUES("weiboUId", "#{weiboUId,jdbcType=VARCHAR}");
        }
        
        if (record.getWeiboAccessToken() != null) {
            VALUES("weiboAccessToken", "#{weiboAccessToken,jdbcType=VARCHAR}");
        }
        
        if (record.getQqUId() != null) {
            VALUES("qqUId", "#{qqUId,jdbcType=VARCHAR}");
        }
        
        if (record.getQqAccessToken() != null) {
            VALUES("qqAccessToken", "#{qqAccessToken,jdbcType=VARCHAR}");
        }
        
        if (record.getOrigin() != null) {
            VALUES("origin", "#{origin,jdbcType=SMALLINT}");
        }
        
        if (record.getStaffId() != null) {
            VALUES("staffId", "#{staffId,jdbcType=INTEGER}");
        }
        
        if (record.getInviterId() != null) {
            VALUES("inviterId", "#{inviterId,jdbcType=INTEGER}");
        }
        
        if (record.getMobile() != null) {
            VALUES("mobile", "#{mobile,jdbcType=VARCHAR}");
        }
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_register_temp
     *
     * @mbggenerated Sun Dec 22 13:06:40 CST 2019
     */
    public String selectByExample(UserRegisterTempExample example) {
        BEGIN();
        if (example != null && example.isDistinct()) {
            SELECT_DISTINCT("id");
        } else {
            SELECT("id");
        }
        SELECT("email");
        SELECT("nickName");
        SELECT("passwd");
        SELECT("registerTime");
        SELECT("roles");
        SELECT("question");
        SELECT("answer");
        SELECT("weiboUId");
        SELECT("weiboAccessToken");
        SELECT("qqUId");
        SELECT("qqAccessToken");
        SELECT("origin");
        SELECT("staffId");
        SELECT("inviterId");
        SELECT("mobile");
        FROM("user_register_temp");
        applyWhere(example, false);
        
        if (example != null && example.getOrderByClause() != null) {
            ORDER_BY(example.getOrderByClause());
        }
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_register_temp
     *
     * @mbggenerated Sun Dec 22 13:06:40 CST 2019
     */
    public String updateByExampleSelective(Map<String, Object> parameter) {
        UserRegisterTemp record = (UserRegisterTemp) parameter.get("record");
        UserRegisterTempExample example = (UserRegisterTempExample) parameter.get("example");
        
        BEGIN();
        UPDATE("user_register_temp");
        
        if (record.getId() != null) {
            SET("id = #{record.id,jdbcType=INTEGER}");
        }
        
        if (record.getEmail() != null) {
            SET("email = #{record.email,jdbcType=VARCHAR}");
        }
        
        if (record.getNickName() != null) {
            SET("nickName = #{record.nickName,jdbcType=VARCHAR}");
        }
        
        if (record.getPasswd() != null) {
            SET("passwd = #{record.passwd,jdbcType=VARCHAR}");
        }
        
        if (record.getRegisterTime() != null) {
            SET("registerTime = #{record.registerTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getRoles() != null) {
            SET("roles = #{record.roles,jdbcType=SMALLINT}");
        }
        
        if (record.getQuestion() != null) {
            SET("question = #{record.question,jdbcType=VARCHAR}");
        }
        
        if (record.getAnswer() != null) {
            SET("answer = #{record.answer,jdbcType=VARCHAR}");
        }
        
        if (record.getWeiboUId() != null) {
            SET("weiboUId = #{record.weiboUId,jdbcType=VARCHAR}");
        }
        
        if (record.getWeiboAccessToken() != null) {
            SET("weiboAccessToken = #{record.weiboAccessToken,jdbcType=VARCHAR}");
        }
        
        if (record.getQqUId() != null) {
            SET("qqUId = #{record.qqUId,jdbcType=VARCHAR}");
        }
        
        if (record.getQqAccessToken() != null) {
            SET("qqAccessToken = #{record.qqAccessToken,jdbcType=VARCHAR}");
        }
        
        if (record.getOrigin() != null) {
            SET("origin = #{record.origin,jdbcType=SMALLINT}");
        }
        
        if (record.getStaffId() != null) {
            SET("staffId = #{record.staffId,jdbcType=INTEGER}");
        }
        
        if (record.getInviterId() != null) {
            SET("inviterId = #{record.inviterId,jdbcType=INTEGER}");
        }
        
        if (record.getMobile() != null) {
            SET("mobile = #{record.mobile,jdbcType=VARCHAR}");
        }
        
        applyWhere(example, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_register_temp
     *
     * @mbggenerated Sun Dec 22 13:06:40 CST 2019
     */
    public String updateByExample(Map<String, Object> parameter) {
        BEGIN();
        UPDATE("user_register_temp");
        
        SET("id = #{record.id,jdbcType=INTEGER}");
        SET("email = #{record.email,jdbcType=VARCHAR}");
        SET("nickName = #{record.nickName,jdbcType=VARCHAR}");
        SET("passwd = #{record.passwd,jdbcType=VARCHAR}");
        SET("registerTime = #{record.registerTime,jdbcType=TIMESTAMP}");
        SET("roles = #{record.roles,jdbcType=SMALLINT}");
        SET("question = #{record.question,jdbcType=VARCHAR}");
        SET("answer = #{record.answer,jdbcType=VARCHAR}");
        SET("weiboUId = #{record.weiboUId,jdbcType=VARCHAR}");
        SET("weiboAccessToken = #{record.weiboAccessToken,jdbcType=VARCHAR}");
        SET("qqUId = #{record.qqUId,jdbcType=VARCHAR}");
        SET("qqAccessToken = #{record.qqAccessToken,jdbcType=VARCHAR}");
        SET("origin = #{record.origin,jdbcType=SMALLINT}");
        SET("staffId = #{record.staffId,jdbcType=INTEGER}");
        SET("inviterId = #{record.inviterId,jdbcType=INTEGER}");
        SET("mobile = #{record.mobile,jdbcType=VARCHAR}");
        
        UserRegisterTempExample example = (UserRegisterTempExample) parameter.get("example");
        applyWhere(example, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_register_temp
     *
     * @mbggenerated Sun Dec 22 13:06:40 CST 2019
     */
    public String updateByPrimaryKeySelective(UserRegisterTemp record) {
        BEGIN();
        UPDATE("user_register_temp");
        
        if (record.getEmail() != null) {
            SET("email = #{email,jdbcType=VARCHAR}");
        }
        
        if (record.getNickName() != null) {
            SET("nickName = #{nickName,jdbcType=VARCHAR}");
        }
        
        if (record.getPasswd() != null) {
            SET("passwd = #{passwd,jdbcType=VARCHAR}");
        }
        
        if (record.getRegisterTime() != null) {
            SET("registerTime = #{registerTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getRoles() != null) {
            SET("roles = #{roles,jdbcType=SMALLINT}");
        }
        
        if (record.getQuestion() != null) {
            SET("question = #{question,jdbcType=VARCHAR}");
        }
        
        if (record.getAnswer() != null) {
            SET("answer = #{answer,jdbcType=VARCHAR}");
        }
        
        if (record.getWeiboUId() != null) {
            SET("weiboUId = #{weiboUId,jdbcType=VARCHAR}");
        }
        
        if (record.getWeiboAccessToken() != null) {
            SET("weiboAccessToken = #{weiboAccessToken,jdbcType=VARCHAR}");
        }
        
        if (record.getQqUId() != null) {
            SET("qqUId = #{qqUId,jdbcType=VARCHAR}");
        }
        
        if (record.getQqAccessToken() != null) {
            SET("qqAccessToken = #{qqAccessToken,jdbcType=VARCHAR}");
        }
        
        if (record.getOrigin() != null) {
            SET("origin = #{origin,jdbcType=SMALLINT}");
        }
        
        if (record.getStaffId() != null) {
            SET("staffId = #{staffId,jdbcType=INTEGER}");
        }
        
        if (record.getInviterId() != null) {
            SET("inviterId = #{inviterId,jdbcType=INTEGER}");
        }
        
        if (record.getMobile() != null) {
            SET("mobile = #{mobile,jdbcType=VARCHAR}");
        }
        
        WHERE("id = #{id,jdbcType=INTEGER}");
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_register_temp
     *
     * @mbggenerated Sun Dec 22 13:06:40 CST 2019
     */
    protected void applyWhere(UserRegisterTempExample example, boolean includeExamplePhrase) {
        if (example == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeExamplePhrase) {
            parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = example.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            WHERE(sb.toString());
        }
    }
}