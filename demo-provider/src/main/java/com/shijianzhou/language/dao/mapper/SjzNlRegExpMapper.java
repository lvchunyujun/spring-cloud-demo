package com.shijianzhou.language.dao.mapper;

import com.hexiaofei.provider0.domain.SjzEventIndex;
import com.shijianzhou.language.domain.SjzNlRegExp;
import com.shijianzhou.language.domain.SjzNlRegExpExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface SjzNlRegExpMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sjz_nl_reg_exp
     *
     * @mbggenerated Sat Aug 24 21:11:39 CST 2019
     */
    @SelectProvider(type=SjzNlRegExpSqlProvider.class, method="countByExample")
    int countByExample(SjzNlRegExpExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sjz_nl_reg_exp
     *
     * @mbggenerated Sat Aug 24 21:11:39 CST 2019
     */
    @DeleteProvider(type=SjzNlRegExpSqlProvider.class, method="deleteByExample")
    int deleteByExample(SjzNlRegExpExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sjz_nl_reg_exp
     *
     * @mbggenerated Sat Aug 24 21:11:39 CST 2019
     */
    @Delete({
        "delete from sjz_nl_reg_exp",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sjz_nl_reg_exp
     *
     * @mbggenerated Sat Aug 24 21:11:39 CST 2019
     */
    @Insert({
        "insert into sjz_nl_reg_exp (id, regExpPattern, ",
        "regExpCode,",
        "regExpDemo, patternType, ",
        "matchType, checkStatus, ",
        "createTime, descr)",
        "values (#{id,jdbcType=INTEGER}, #{regExpPattern,jdbcType=VARCHAR}, ",
        "#{regExpCode,jdbcType=VARCHAR},",
        "#{regExpDemo,jdbcType=VARCHAR}, #{patternType,jdbcType=SMALLINT}, ",
        "#{matchType,jdbcType=SMALLINT}, #{checkStatus,jdbcType=SMALLINT}, ",
        "#{createTime,jdbcType=TIMESTAMP}, #{descr,jdbcType=VARCHAR})"
    })
    int insert(SjzNlRegExp record);



    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sjz_nl_reg_exp
     *
     * @mbggenerated Sat Aug 24 21:11:39 CST 2019
     */
    @InsertProvider(type=SjzNlRegExpSqlProvider.class, method="insertSelective")
    int insertSelective(SjzNlRegExp record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sjz_nl_reg_exp
     *
     * @mbggenerated Sat Aug 24 21:11:39 CST 2019
     */
    @SelectProvider(type=SjzNlRegExpSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="regExpPattern", property="regExpPattern", jdbcType=JdbcType.VARCHAR),
        @Result(column="regExpCode", property="regExpCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="regExpDemo", property="regExpDemo", jdbcType=JdbcType.VARCHAR),
        @Result(column="patternType", property="patternType", jdbcType=JdbcType.SMALLINT),
        @Result(column="matchType", property="matchType", jdbcType=JdbcType.SMALLINT),
        @Result(column="checkStatus", property="checkStatus", jdbcType=JdbcType.SMALLINT),
        @Result(column="createTime", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="descr", property="descr", jdbcType=JdbcType.VARCHAR)
    })
    List<SjzNlRegExp> selectByExample(SjzNlRegExpExample example);

    @Select({
            "select",
            "id, regExpPattern,regExpCode, regExpDemo, patternType, matchType, checkStatus, createTime, ",
            "descr",
            "from sjz_nl_reg_exp",
            "where regExpCode = #{regExpCode,jdbcType=VARCHAR}"
    })
    @Results({
            @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
            @Result(column="regExpPattern", property="regExpPattern", jdbcType=JdbcType.VARCHAR),
            @Result(column="regExpCode", property="regExpCode", jdbcType=JdbcType.VARCHAR),
            @Result(column="regExpDemo", property="regExpDemo", jdbcType=JdbcType.VARCHAR),
            @Result(column="patternType", property="patternType", jdbcType=JdbcType.SMALLINT),
            @Result(column="matchType", property="matchType", jdbcType=JdbcType.SMALLINT),
            @Result(column="checkStatus", property="checkStatus", jdbcType=JdbcType.SMALLINT),
            @Result(column="createTime", property="createTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="descr", property="descr", jdbcType=JdbcType.VARCHAR)
    })
    SjzNlRegExp selectByExgExpCode(String exgExpCode);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sjz_nl_reg_exp
     *
     * @mbggenerated Sat Aug 24 21:11:39 CST 2019
     */
    @Select({
        "select",
        "id, regExpPattern, regExpDemo, patternType, matchType, checkStatus, createTime, ",
        "descr",
        "from sjz_nl_reg_exp",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="regExpPattern", property="regExpPattern", jdbcType=JdbcType.VARCHAR),
        @Result(column="regExpCode", property="regExpCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="regExpDemo", property="regExpDemo", jdbcType=JdbcType.VARCHAR),
        @Result(column="patternType", property="patternType", jdbcType=JdbcType.SMALLINT),
        @Result(column="matchType", property="matchType", jdbcType=JdbcType.SMALLINT),
        @Result(column="checkStatus", property="checkStatus", jdbcType=JdbcType.SMALLINT),
        @Result(column="createTime", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="descr", property="descr", jdbcType=JdbcType.VARCHAR)
    })
    SjzNlRegExp selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sjz_nl_reg_exp
     *
     * @mbggenerated Sat Aug 24 21:11:39 CST 2019
     */
    @UpdateProvider(type=SjzNlRegExpSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") SjzNlRegExp record, @Param("example") SjzNlRegExpExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sjz_nl_reg_exp
     *
     * @mbggenerated Sat Aug 24 21:11:39 CST 2019
     */
    @UpdateProvider(type=SjzNlRegExpSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") SjzNlRegExp record, @Param("example") SjzNlRegExpExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sjz_nl_reg_exp
     *
     * @mbggenerated Sat Aug 24 21:11:39 CST 2019
     */
    @UpdateProvider(type=SjzNlRegExpSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(SjzNlRegExp record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sjz_nl_reg_exp
     *
     * @mbggenerated Sat Aug 24 21:11:39 CST 2019
     */
    @Update({
        "update sjz_nl_reg_exp",
        "set regExpPattern = #{regExpPattern,jdbcType=VARCHAR},",
          "regExpCode = #{regExpCode,jdbcType=VARCHAR},",
          "regExpDemo = #{regExpDemo,jdbcType=VARCHAR},",
          "patternType = #{patternType,jdbcType=SMALLINT},",
          "matchType = #{matchType,jdbcType=SMALLINT},",
          "checkStatus = #{checkStatus,jdbcType=SMALLINT},",
          "createTime = #{createTime,jdbcType=TIMESTAMP},",
          "descr = #{descr,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(SjzNlRegExp record);

    @Select("select count(*) from sjz_nl_reg_exp order by createTime")
    int selectCountByAll();

    @Select({
            " select",
            " id, regExpPattern,regExpCode, regExpDemo, patternType, matchType, checkStatus, createTime, ",
            " descr ",
            " from sjz_nl_reg_exp ",
            " order by createTime desc ",
            " limit #{offset},#{pagesize} "
    })
    @Results({
            @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
            @Result(column="regExpPattern", property="regExpPattern", jdbcType=JdbcType.VARCHAR),
            @Result(column="regExpCode", property="regExpCode", jdbcType=JdbcType.VARCHAR),
            @Result(column="regExpDemo", property="regExpDemo", jdbcType=JdbcType.VARCHAR),
            @Result(column="patternType", property="patternType", jdbcType=JdbcType.SMALLINT),
            @Result(column="matchType", property="matchType", jdbcType=JdbcType.SMALLINT),
            @Result(column="checkStatus", property="checkStatus", jdbcType=JdbcType.SMALLINT),
            @Result(column="createTime", property="createTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="descr", property="descr", jdbcType=JdbcType.VARCHAR)
    })
    List<SjzNlRegExp> selectListByPaging(@Param("offset") int offset, @Param("pagesize")  int pageSize);
}